{"version":3,"sources":["serviceWorker.js","components/Posts.js","components/PostLoading.js","App.js","components/Header.js","components/Footer.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","cardMedia","paddingTop","link","margin","spacing","cardHeader","backgroundColor","palette","type","grey","postTitle","fontSize","textAlign","postText","display","justifyContent","alignItems","marginBottom","Posts","props","posts","classes","length","Fragment","Container","maxWidth","component","Grid","container","map","post","item","key","id","xs","md","Card","className","card","CardMedia","image","title","CardContent","cardContent","Typography","gutterBottom","variant","substr","color","excerpt","PostLoading","Component","isLoading","style","App","PostLoadingComponent","useState","loading","appState","setAppState","useEffect","fetch","then","data","json","appBar","borderBottom","divider","Header","CssBaseline","AppBar","position","elevation","Toolbar","noWrap","footer","borderTop","marginTop","paddingBottom","breakpoints","up","Copyright","align","Link","href","Date","getFullYear","footers","description","Footer","justify","sm","Box","mt","routing","StrictMode","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iGCTAC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,UAAW,CACVC,WAAY,UAEbC,KAAM,CACLC,OAAQJ,EAAMK,QAAQ,EAAG,MAE1BC,WAAY,CACXC,gBACwB,UAAvBP,EAAMQ,QAAQC,KACXT,EAAMQ,QAAQE,KAAK,KACnBV,EAAMQ,QAAQE,KAAK,MAExBC,UAAW,CACVC,SAAU,OACVC,UAAW,QAEZC,SAAU,CACTC,QAAS,OACTC,eAAgB,OAChBC,WAAY,WACZL,SAAU,OACVC,UAAW,OACXK,aAAclB,EAAMK,QAAQ,QAkDfc,EA9CD,SAACC,GAAW,IACjBC,EAAUD,EAAVC,MACFC,EAAUxB,IAChB,OAAKuB,GAA0B,IAAjBA,EAAME,OAEnB,kBAAC,IAAMC,SAAP,KACC,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,QAClC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGY,WAAW,YACrCI,EAAMS,KAAI,SAACC,GACX,OAEC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAKF,EAAKG,GAAIC,GAAI,GAAIC,GAAI,GACpC,kBAACC,EAAA,EAAD,CAAMC,UAAWhB,EAAQiB,MACxB,kBAACC,EAAA,EAAD,CACCF,UAAWhB,EAAQrB,UACnBwC,MAAM,qCACNC,MAAM,gBAEP,kBAACC,EAAA,EAAD,CAAaL,UAAWhB,EAAQsB,aAC/B,kBAACC,EAAA,EAAD,CACCC,cAAY,EACZC,QAAQ,KACRpB,UAAU,KACVW,UAAWhB,EAAQX,WAElBoB,EAAKW,MAAMM,OAAO,EAAG,IANvB,OAQA,yBAAKV,UAAWhB,EAAQR,UACvB,kBAAC+B,EAAA,EAAD,CACClB,UAAU,IACVsB,MAAM,gBAEP,kBAACJ,EAAA,EAAD,CAAYE,QAAQ,IAAIE,MAAM,iBAC5BlB,EAAKmB,QAAQF,OAAO,EAAG,IADzB,iBA7B+B,6D,QC3B3BG,MAVf,SAAqBC,GACpB,OAAO,YAAwD,IAAxBC,EAAuB,EAAvBA,UAAcjC,EAAS,6BAC7D,OAAKiC,EAEJ,uBAAGC,MAAO,CAAE1C,SAAU,SAAtB,2CAFsB,kBAACwC,EAAchC,KCwBzBmC,MAvBf,WACC,IAAMJ,EAAcK,EAAqBrC,GAD3B,EAEkBsC,mBAAS,CACxCC,SAAS,EACTrC,MAAO,OAJM,mBAEPsC,EAFO,KAEGC,EAFH,KAgBd,OATAC,qBAAU,WACTD,EAAY,CAAEF,SAAS,IAEvBI,MADY,4BAEVC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAAC1C,GACNuC,EAAY,CAAEF,SAAS,EAAOrC,MAAOA,SAErC,CAACuC,IAEH,yBAAKtB,UAAU,OACd,4CACA,kBAACa,EAAD,CAAaE,UAAWM,EAASD,QAASrC,MAAOsC,EAAStC,U,wBCjBvDvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCkE,OAAQ,CACPC,aAAa,aAAD,OAAenE,EAAMQ,QAAQ4D,cAyB5BC,MArBf,WACC,IAAM/C,EAAUxB,IAChB,OACC,kBAAC,IAAM0B,SAAP,KACC,kBAAC8C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACCC,SAAS,SACTvB,MAAM,QACNwB,UAAW,EACXnC,UAAWhB,EAAQ4C,QAEnB,kBAACQ,EAAA,EAAD,KACC,kBAAC7B,EAAA,EAAD,CAAYE,QAAQ,KAAKE,MAAM,UAAU0B,QAAM,GAA/C,gB,wBCjBC7E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxC4E,OAAO,aACNC,UAAU,aAAD,OAAe7E,EAAMQ,QAAQ4D,SACtCU,UAAW9E,EAAMK,QAAQ,GACzBH,WAAYF,EAAMK,QAAQ,GAC1B0E,cAAe/E,EAAMK,QAAQ,IAC5BL,EAAMgF,YAAYC,GAAG,MAAQ,CAC7B/E,WAAYF,EAAMK,QAAQ,GAC1B0E,cAAe/E,EAAMK,QAAQ,SAKhC,SAAS6E,IACR,OACC,kBAACrC,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBkC,MAAM,UACtD,kBACD,kBAACC,EAAA,EAAD,CAAMnC,MAAM,UAAUoC,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKJ,IAAMC,EAAU,CACf,CACC9C,MAAO,UACP+C,YAAa,CAAC,OAAQ,UAAW,aAAc,cAEhD,CACC/C,MAAO,WACP+C,YAAa,CACZ,aACA,iBACA,eACA,kBACA,gBAGF,CACC/C,MAAO,YACP+C,YAAa,CACZ,WACA,gBACA,mBACA,mBAGF,CACC/C,MAAO,QACP+C,YAAa,CAAC,iBAAkB,kBAmCnBC,MA/Bf,WACC,IAAMpE,EAAUxB,IAChB,OACC,kBAAC,IAAM0B,SAAP,KACC,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,SAASW,UAAWhB,EAAQsD,QAC9D,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGsF,QAAQ,gBAClCH,EAAQ1D,KAAI,SAAC8C,GAAD,OACZ,kBAAChD,EAAA,EAAD,CAAMI,MAAI,EAACG,GAAI,EAAGyD,GAAI,EAAG3D,IAAK2C,EAAOlC,OACpC,kBAACG,EAAA,EAAD,CAAYE,QAAQ,KAAKE,MAAM,cAAcH,cAAY,GACvD8B,EAAOlC,OAET,4BACEkC,EAAOa,YAAY3D,KAAI,SAACE,GAAD,OACvB,wBAAIC,IAAKD,GACR,kBAACoD,EAAA,EAAD,CAAMC,KAAK,IAAItC,QAAQ,YAAYE,MAAM,iBACvCjB,aAQR,kBAAC6D,EAAA,EAAD,CAAKC,GAAI,GACR,kBAACZ,EAAD,UC/ECa,EACL,kBAAC,IAAD,KACC,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvE,UAAW4B,KAElC,kBAAC,EAAD,QAKH4C,IAASC,OAAOL,EAASM,SAASC,eAAe,SN8G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bbdc0bdc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n\tcardMedia: {\n\t\tpaddingTop: '56.25%', // 16:9\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\tcardHeader: {\n\t\tbackgroundColor:\n\t\t\ttheme.palette.type === 'light'\n\t\t\t\t? theme.palette.grey[200]\n\t\t\t\t: theme.palette.grey[700],\n\t},\n\tpostTitle: {\n\t\tfontSize: '16px',\n\t\ttextAlign: 'left',\n\t},\n\tpostText: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'left',\n\t\talignItems: 'baseline',\n\t\tfontSize: '12px',\n\t\ttextAlign: 'left',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n}));\n\nconst Posts = (props) => {\n\tconst { posts } = props;\n\tconst classes = useStyles();\n\tif (!posts || posts.length === 0) return <p>Can not find any posts, sorry</p>;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"main\">\n\t\t\t\t<Grid container spacing={5} alignItems=\"flex-end\">\n\t\t\t\t\t{posts.map((post) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// Enterprise card is full width at sm breakpoint\n\t\t\t\t\t\t\t<Grid item key={post.id} xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cardMedia}\n\t\t\t\t\t\t\t\t\t\timage=\"https://source.unsplash.com/random\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Image title\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.postTitle}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{post.title.substr(0, 50)}...\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.postText}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\t\t\t\t\t></Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"p\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\t\t\t{post.excerpt.substr(0, 60)}...\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\nexport default Posts;\n","import React from 'react';\n\nfunction PostLoading(Component) {\n\treturn function PostLoadingComponent({ isLoading, ...props }) {\n\t\tif (!isLoading) return <Component {...props} />;\n\t\treturn (\n\t\t\t<p style={{ fontSize: '25px' }}>\n\t\t\t\tWe are waiting for the data to load!...\n\t\t\t</p>\n\t\t);\n\t};\n}\nexport default PostLoading;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Posts from './components/Posts';\nimport PostLoadingComponent from './components/PostLoading';\n\nfunction App() {\n\tconst PostLoading = PostLoadingComponent(Posts);\n\tconst [appState, setAppState] = useState({\n\t\tloading: false,\n\t\tposts: null,\n\t});\n\n\tuseEffect(() => {\n\t\tsetAppState({ loading: true });\n\t\tconst apiUrl = `http://127.0.0.1:80/api/`;\n\t\tfetch(apiUrl)\n\t\t\t.then((data) => data.json())\n\t\t\t.then((posts) => {\n\t\t\t\tsetAppState({ loading: false, posts: posts });\n\t\t\t});\n\t}, [setAppState]);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Latest Posts</h1>\n\t\t\t<PostLoading isLoading={appState.loading} posts={appState.posts} />\n\t\t</div>\n\t);\n}\nexport default App;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t},\n}));\n\nfunction Header() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"white\"\n\t\t\t\televation={0}\n\t\t\t\tclassName={classes.appBar}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" noWrap>\n\t\t\t\t\t\tBlogmeUp\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n\tfooter: {\n\t\tborderTop: `1px solid ${theme.palette.divider}`,\n\t\tmarginTop: theme.spacing(8),\n\t\tpaddingTop: theme.spacing(3),\n\t\tpaddingBottom: theme.spacing(3),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tpaddingTop: theme.spacing(6),\n\t\t\tpaddingBottom: theme.spacing(6),\n\t\t},\n\t},\n}));\n\nfunction Copyright() {\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © '}\n\t\t\t<Link color=\"inherit\" href=\"https://material-ui.com/\">\n\t\t\t\tYour Website\n\t\t\t</Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\nconst footers = [\n\t{\n\t\ttitle: 'Company',\n\t\tdescription: ['Team', 'History', 'Contact us', 'Locations'],\n\t},\n\t{\n\t\ttitle: 'Features',\n\t\tdescription: [\n\t\t\t'Cool stuff',\n\t\t\t'Random feature',\n\t\t\t'Team feature',\n\t\t\t'Developer stuff',\n\t\t\t'Another one',\n\t\t],\n\t},\n\t{\n\t\ttitle: 'Resources',\n\t\tdescription: [\n\t\t\t'Resource',\n\t\t\t'Resource name',\n\t\t\t'Another resource',\n\t\t\t'Final resource',\n\t\t],\n\t},\n\t{\n\t\ttitle: 'Legal',\n\t\tdescription: ['Privacy policy', 'Terms of use'],\n\t},\n];\n\nfunction Footer() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n\t\t\t\t<Grid container spacing={4} justify=\"space-evenly\">\n\t\t\t\t\t{footers.map((footer) => (\n\t\t\t\t\t\t<Grid item xs={6} sm={3} key={footer.title}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n\t\t\t\t\t\t\t\t{footer.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{footer.description.map((item) => (\n\t\t\t\t\t\t\t\t\t<li key={item}>\n\t\t\t\t\t\t\t\t\t\t<Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t\t<Box mt={5}>\n\t\t\t\t\t<Copyright />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport App from './App';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst routing = (\n\t<Router>\n\t\t<React.StrictMode>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={App} />\n\t\t\t</Switch>\n\t\t\t<Footer />\n\t\t</React.StrictMode>\n\t</Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}